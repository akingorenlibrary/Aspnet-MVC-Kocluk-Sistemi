// <auto-generated />
using System;
using Kocluk.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kocluk.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Kocluk.Models.DanisanBeslenmeProgrami", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AntrenorId")
                        .HasColumnType("int");

                    b.Property<int>("DanisanId")
                        .HasColumnType("int");

                    b.Property<string>("GunlukOgunler")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hedef")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KaloriHedefi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AntrenorId");

                    b.HasIndex("DanisanId");

                    b.ToTable("DanisanBeslenmeProgramlari");
                });

            modelBuilder.Entity("Kocluk.Models.DanisanEgzersizProgrami", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AntrenorId")
                        .HasColumnType("int");

                    b.Property<int>("DanisanId")
                        .HasColumnType("int");

                    b.Property<string>("EgzersizAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hedefleri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ProgramaBaslamaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("PrograminSuresi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SetSayisi")
                        .HasColumnType("int");

                    b.Property<int>("TekrarSayisi")
                        .HasColumnType("int");

                    b.Property<string>("VideoRehberi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AntrenorId");

                    b.HasIndex("DanisanId");

                    b.ToTable("DanisanEgzersizProgramlari");
                });

            modelBuilder.Entity("Kocluk.Models.IlerlemeDurumu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Boy")
                        .HasColumnType("int");

                    b.Property<int>("KasKutlesi")
                        .HasColumnType("int");

                    b.Property<int>("Kilo")
                        .HasColumnType("int");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("VucutKitleIndeksi")
                        .HasColumnType("int");

                    b.Property<int>("VucutYagOrani")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.ToTable("IlerlemeDurumlari");
                });

            modelBuilder.Entity("Kocluk.Models.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Cinsiyet")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DanisanSayisi")
                        .HasColumnType("int");

                    b.Property<string>("Deneyimleri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Eposta")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Hedefleri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciRolu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilFototagrafUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SifreSifirlamaMetni")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyadi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TelefonNumarasi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UzmanlikAlanlari")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("Kocluk.Models.KullanicilarinAntrenorleri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AntrenorId")
                        .HasColumnType("int");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AntrenorId");

                    b.HasIndex("KullaniciId");

                    b.ToTable("KullanicilarinAntrenorleris");
                });

            modelBuilder.Entity("Kocluk.Models.Mesajlar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AliciId")
                        .HasColumnType("int");

                    b.Property<int>("GonderenId")
                        .HasColumnType("int");

                    b.Property<string>("Mesaj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("tarih")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AliciId");

                    b.HasIndex("GonderenId");

                    b.ToTable("Mesajlar");
                });

            modelBuilder.Entity("Kocluk.Models.DanisanBeslenmeProgrami", b =>
                {
                    b.HasOne("Kocluk.Models.Kullanici", "Antrenor")
                        .WithMany()
                        .HasForeignKey("AntrenorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kocluk.Models.Kullanici", "Kullanici")
                        .WithMany("DanisanBeslenmeProgramlari")
                        .HasForeignKey("DanisanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Antrenor");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("Kocluk.Models.DanisanEgzersizProgrami", b =>
                {
                    b.HasOne("Kocluk.Models.Kullanici", "Antrenor")
                        .WithMany()
                        .HasForeignKey("AntrenorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kocluk.Models.Kullanici", "Kullanici")
                        .WithMany("DanisanEgzersizProgramlari")
                        .HasForeignKey("DanisanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Antrenor");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("Kocluk.Models.IlerlemeDurumu", b =>
                {
                    b.HasOne("Kocluk.Models.Kullanici", "Kullanici")
                        .WithMany("IlerlemeDurumlari")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("Kocluk.Models.KullanicilarinAntrenorleri", b =>
                {
                    b.HasOne("Kocluk.Models.Kullanici", "Antrenor")
                        .WithMany()
                        .HasForeignKey("AntrenorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kocluk.Models.Kullanici", "Kullanici")
                        .WithMany("KullanicilarinAntrenorleris")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Antrenor");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("Kocluk.Models.Mesajlar", b =>
                {
                    b.HasOne("Kocluk.Models.Kullanici", "Alici")
                        .WithMany("Mesajlar")
                        .HasForeignKey("AliciId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kocluk.Models.Kullanici", "Gonderen")
                        .WithMany()
                        .HasForeignKey("GonderenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Alici");

                    b.Navigation("Gonderen");
                });

            modelBuilder.Entity("Kocluk.Models.Kullanici", b =>
                {
                    b.Navigation("DanisanBeslenmeProgramlari");

                    b.Navigation("DanisanEgzersizProgramlari");

                    b.Navigation("IlerlemeDurumlari");

                    b.Navigation("KullanicilarinAntrenorleris");

                    b.Navigation("Mesajlar");
                });
#pragma warning restore 612, 618
        }
    }
}
